name: Infrastructure provisioning

on:
  workflow_dispatch:

jobs:
  infrastructure:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    environment:
      name: Infrastructure provisioning

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up runner environent

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Create an SSH keypair
        id: ssh_key
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t ed25519 -C "github_deployment_key" -f ~/.ssh/github_deployment_key -N ""
          echo "private_key<<EOF" >> $GITHUB_OUTPUT
          cat ~/.ssh/github_deployment_key >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Terraform run

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Terraform init
        id: init
        run: terraform init -input=false
        working-directory: terraform

      - name: Terraform plan
        id: plan
        run: terraform plan -input=false -var-file=terraform.tfvars
        working-directory: terraform

      - name: Terraform apply
        id: apply
        run: terraform apply -input=false -auto-approve -var-file=terraform.tfvars
        working-directory: terraform

      - name: Get terraform output
        id: output
        run: |
          EC2_IP=$(terraform output -raw instance_public_ip)
          echo "ec2_ip=$EC2_IP" >> $GITHUB_OUTPUT
        working-directory: terraform

      # Automatically update secrets

      - name: Update EC2_HOST secret
        uses: gliech/create-github-secret-action@v1  
        with:  
          name: EC2_HOST  
          value: ${{ steps.output.outputs.ec2_ip }}
          pa_token: ${{ secrets.PAT_TOKEN }}  

      - name: Update EC2_USER secret
        uses: gliech/create-github-secret-action@v1  
        with:  
          name: EC2_USER  
          value: ubuntu
          pa_token: ${{ secrets.PAT_TOKEN }}  

      - name: Update EC2_SSH_PRIVATE_KEY secret
        uses: gliech/create-github-secret-action@v1  
        with:  
          name: EC2_SSH_PRIVATE_KEY  
          value: ${{ steps.ssh_key.outputs.private_key }}
          pa_token: ${{ secrets.PAT_TOKEN }}  


      # Get updated datad

      - name: Printing secrets data
        run: |
          echo "Got IP ${{ steps.output.outputs.ec2_ip }}, updated secrets.EC2_HOST"
          echo "Public key is: \n $(cat ~/.ssh/github_deployment_key.pub)"
          echo "Private key is: \n $(cat ~/.ssh/github_deployment_key)"